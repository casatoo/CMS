<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.github.mskim.comm.cms.mapper.UserAttendanceChangeRequestMapper">

    <!-- ResultMap -->
    <resultMap id="ChangeRequestResultMap" type="io.github.mskim.comm.cms.entity.UserAttendanceChangeRequest">
        <id property="id" column="id"/>
        <result property="originalCheckInTime" column="original_check_in_time"/>
        <result property="originalCheckOutTime" column="original_check_out_time"/>
        <result property="requestedCheckInTime" column="requested_check_in_time"/>
        <result property="requestedCheckOutTime" column="requested_check_out_time"/>
        <result property="reason" column="reason"/>
        <result property="status" column="status" javaType="io.github.mskim.comm.cms.entity.UserAttendanceChangeRequest$ChangeStatus"/>
        <result property="approvedAt" column="approved_at"/>
        <result property="createdAt" column="created_at"/>
        <result property="createdBy" column="created_by"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="updatedBy" column="updated_by"/>

        <association property="user" javaType="io.github.mskim.comm.cms.entity.Users">
            <id property="id" column="user_id"/>
            <result property="loginId" column="user_login_id"/>
            <result property="name" column="user_name"/>
        </association>

        <association property="approver" javaType="io.github.mskim.comm.cms.entity.Users">
            <id property="id" column="approver_id"/>
            <result property="loginId" column="approver_login_id"/>
            <result property="name" column="approver_name"/>
        </association>

        <association property="attendance" javaType="io.github.mskim.comm.cms.entity.UserAttendance">
            <id property="id" column="attendance_id"/>
            <result property="workDate" column="work_date"/>
        </association>
    </resultMap>

    <!-- 사용자 기준 변경 요청 전체 조회 -->
    <select id="findAllByUserId" resultMap="ChangeRequestResultMap">
        SELECT cr.*,
               u.id AS user_id, u.login_id AS user_login_id, u.name AS user_name,
               a.id AS attendance_id, a.work_date,
               ap.id AS approver_id, ap.login_id AS approver_login_id, ap.name AS approver_name
        FROM USER_ATTENDANCE_CHANGE_REQUEST cr
                 JOIN USERS u ON cr.user_id = u.id
                 JOIN USER_ATTENDANCE a ON cr.attendance_id = a.id
                 LEFT JOIN USERS ap ON cr.approver_id = ap.id
        WHERE cr.user_id = #{userId}
        ORDER BY cr.created_at DESC
    </select>

    <!-- 승인 대기 목록 -->
    <select id="findPendingRequests" resultMap="ChangeRequestResultMap">
        SELECT cr.*,
               u.id AS user_id, u.login_id AS user_login_id, u.name AS user_name,
               a.id AS attendance_id, a.work_date,
               ap.id AS approver_id, ap.login_id AS approver_login_id, ap.name AS approver_name
        FROM USER_ATTENDANCE_CHANGE_REQUEST cr
                 JOIN USERS u ON cr.user_id = u.id
                 JOIN USER_ATTENDANCE a ON cr.attendance_id = a.id
                 LEFT JOIN USERS ap ON cr.approver_id = ap.id
        WHERE cr.status = 'REQUEST'
        ORDER BY cr.created_at ASC
    </select>

    <!-- 단일 요청 상세 조회 -->
    <select id="findById" resultMap="ChangeRequestResultMap">
        SELECT cr.*,
               u.id AS user_id, u.login_id AS user_login_id, u.name AS user_name,
               a.id AS attendance_id, a.work_date,
               ap.id AS approver_id, ap.login_id AS approver_login_id, ap.name AS approver_name
        FROM USER_ATTENDANCE_CHANGE_REQUEST cr
                 JOIN USERS u ON cr.user_id = u.id
                 JOIN USER_ATTENDANCE a ON cr.attendance_id = a.id
                 LEFT JOIN USERS ap ON cr.approver_id = ap.id
        WHERE cr.id = #{id}
    </select>

    <select id="findOneBySearchParams" resultMap="ChangeRequestResultMap">
        SELECT
            uacr.*,
            ua.id AS attendance_id,
            u.id AS user_id,
            a.id AS approver_id
        FROM USER_ATTENDANCE_CHANGE_REQUEST uacr
                 LEFT JOIN USER_ATTENDANCE ua ON uacr.attendance_id = ua.id
                 JOIN USERS u ON uacr.user_id = u.id
                 LEFT JOIN USERS a ON uacr.approver_id = a.id
        WHERE uacr.user_id = #{userId}
          AND (
            DATE(uacr.requested_check_in_time) = #{workDate}
            OR DATE(uacr.requested_check_out_time) = #{workDate}
            )
          AND uacr.status = #{status}
            LIMIT 1;
    </select>

</mapper>